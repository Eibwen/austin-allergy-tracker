# httpsmedia.kxan.comnxs-kxantv-media-us-east-1oembedwx_embedallergyallergy_v3.5.jsv=4
name: Scrape Allergy Data

on:
  push:
  workflow_dispatch:
  schedule:
    - cron:  '0 * * * *' # Every hour. Ref https://crontab.guru/examples.html

jobs:
  scheduled:
    name: Allergy Job
    runs-on: ubuntu-latest
    env:
      HTML_NAME: allergy_v3.raw.html
      JS_ARRAYS_NAME: /tmp/allergy_v3.arrays.js
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Fetch latest data
      run: |-
        curl https://media.psg.nexstardigital.net/kxan/weather/allergy/allergy_v5.js?v=5 > $HTML_NAME

    - name: Process data
      run: |-
        # grep -Poz '(var ary[^;]+?;)' allergy_v3.raw.html
        awk '/var ary/,/;/' $HTML_NAME > $JS_ARRAYS_NAME
      continue-on-error: true

    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.4
      with:
        # Set always-auth in npmrc
        always-auth: # optional, default is false
        # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
        node-version: # optional
        # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
        architecture: # optional
        # Set this option if you want the action to check for the latest available version that satisfies the version spec
        check-latest: # optional
        # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
        registry-url: # optional
        # Optional scope for authenticating against scoped registries
        scope: # optional
        # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
        token: # optional, default is ${{ github.token }}
    - run: (npm install && npm run start)

    - name: Commit and push if it changed
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date +"%Y-%m-%d %T")
        git commit -m "Latest data: ${timestamp} (from: $GITHUB_EVENT_NAME)" || exit 0
        git push
